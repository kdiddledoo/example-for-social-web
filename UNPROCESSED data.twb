<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='TotalResults' inline='true' name='federated.0xdzj5a1n703wv175zqus0he7j5h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TotalResults' name='textscan.074npb80qq611i1bfaf0r0nnql5b'>
            <connection class='textscan' directory='C:/Users/Kelsey/Documents/School/VU Amsterdam/Masters/socialweb/Result/Result' filename='TotalResults.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.074npb80qq611i1bfaf0r0nnql5b' name='TotalResults.csv' table='[TotalResults#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='date' ordinal='0' />
            <column datatype='real' name='pos_per' ordinal='1' />
            <column datatype='string' name='pos_5' ordinal='2' />
            <column datatype='real' name='neg_per' ordinal='3' />
            <column datatype='string' name='neg_5' ordinal='4' />
            <column datatype='real' name='neu_per' ordinal='5' />
            <column datatype='string' name='neu_5' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[TotalResults.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>20</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[TotalResults.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pos_per</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pos_per]</local-name>
            <parent-name>[TotalResults.csv]</parent-name>
            <remote-alias>pos_per</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pos_5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pos_5]</local-name>
            <parent-name>[TotalResults.csv]</parent-name>
            <remote-alias>pos_5</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neg_per</remote-name>
            <remote-type>5</remote-type>
            <local-name>[neg_per]</local-name>
            <parent-name>[TotalResults.csv]</parent-name>
            <remote-alias>neg_per</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neg_5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neg_5]</local-name>
            <parent-name>[TotalResults.csv]</parent-name>
            <remote-alias>neg_5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neu_per</remote-name>
            <remote-type>5</remote-type>
            <local-name>[neu_per]</local-name>
            <parent-name>[TotalResults.csv]</parent-name>
            <remote-alias>neu_per</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neu_5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neu_5]</local-name>
            <parent-name>[TotalResults.csv]</parent-name>
            <remote-alias>neu_5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Date (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[date]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;2,015&quot;'>
            <value>2015</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='integer' name='[date]' role='measure' type='quantitative' />
      <column caption='Neg 5' datatype='string' name='[neg_5]' role='dimension' type='nominal' />
      <column caption='Neg Per' datatype='real' name='[neg_per]' role='measure' type='quantitative' />
      <column caption='Neu 5' datatype='string' name='[neu_5]' role='dimension' type='nominal' />
      <column caption='Neu Per' datatype='real' name='[neu_per]' role='measure' type='quantitative' />
      <column caption='Pos 5' datatype='string' name='[pos_5]' role='dimension' type='nominal' />
      <column caption='Pos Per' datatype='real' name='[pos_per]' role='measure' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Sum' name='[sum:date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[neg_per]' derivation='Sum' name='[sum:neg_per:qk]' pivot='key' type='quantitative' />
      <column-instance column='[neu_per]' derivation='Sum' name='[sum:neu_per:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pos_per]' derivation='Sum' name='[sum:pos_per:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.478322' measure-ordering='alphabetic' measure-percentage='0.521678' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xdzj5a1n703wv175zqus0he7j5h].[sum:date:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xdzj5a1n703wv175zqus0he7j5h].[sum:neg_per:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0xdzj5a1n703wv175zqus0he7j5h].[sum:neu_per:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0xdzj5a1n703wv175zqus0he7j5h].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0xdzj5a1n703wv175zqus0he7j5h].[sum:pos_per:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='As numbers'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalResults' name='federated.0xdzj5a1n703wv175zqus0he7j5h' />
          </datasources>
          <datasource-dependencies datasource='federated.0xdzj5a1n703wv175zqus0he7j5h'>
            <column datatype='string' name='[Date (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[date]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;2,015&quot;'>
                  <value>2015</value>
                </bin>
              </calculation>
            </column>
            <column caption='Date' datatype='integer' name='[date]' role='measure' type='quantitative' />
            <column caption='Neg Per' datatype='real' name='[neg_per]' role='measure' type='quantitative' />
            <column caption='Neu Per' datatype='real' name='[neu_per]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column caption='Pos Per' datatype='real' name='[pos_per]' role='measure' type='quantitative' />
            <column-instance column='[neg_per]' derivation='Sum' name='[sum:neg_per:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neu_per]' derivation='Sum' name='[sum:neu_per:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pos_per]' derivation='Sum' name='[sum:pos_per:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xdzj5a1n703wv175zqus0he7j5h].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xdzj5a1n703wv175zqus0he7j5h].[sum:neg_per:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xdzj5a1n703wv175zqus0he7j5h].[sum:neu_per:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xdzj5a1n703wv175zqus0he7j5h].[sum:pos_per:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xdzj5a1n703wv175zqus0he7j5h].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xdzj5a1n703wv175zqus0he7j5h].[Multiple Values]' />
              <color column='[federated.0xdzj5a1n703wv175zqus0he7j5h].[Date (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xdzj5a1n703wv175zqus0he7j5h].[none:date:ok]</rows>
        <cols>[federated.0xdzj5a1n703wv175zqus0he7j5h].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{44688794-643B-4E61-A533-0D3E26D2E06D}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalResults' name='federated.0xdzj5a1n703wv175zqus0he7j5h' />
          </datasources>
          <datasource-dependencies datasource='federated.0xdzj5a1n703wv175zqus0he7j5h'>
            <column caption='Date' datatype='integer' name='[date]' role='measure' type='quantitative' />
            <column caption='Neg Per' datatype='real' name='[neg_per]' role='measure' type='quantitative' />
            <column caption='Neu Per' datatype='real' name='[neu_per]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column caption='Pos Per' datatype='real' name='[pos_per]' role='measure' type='quantitative' />
            <column-instance column='[neg_per]' derivation='Sum' name='[sum:neg_per:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neu_per]' derivation='Sum' name='[sum:neu_per:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pos_per]' derivation='Sum' name='[sum:pos_per:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xdzj5a1n703wv175zqus0he7j5h].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xdzj5a1n703wv175zqus0he7j5h].[sum:neg_per:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xdzj5a1n703wv175zqus0he7j5h].[sum:neu_per:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xdzj5a1n703wv175zqus0he7j5h].[sum:pos_per:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xdzj5a1n703wv175zqus0he7j5h].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xdzj5a1n703wv175zqus0he7j5h].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xdzj5a1n703wv175zqus0he7j5h].[Multiple Values]</rows>
        <cols>[federated.0xdzj5a1n703wv175zqus0he7j5h].[none:date:ok]</cols>
      </table>
      <simple-id uuid='{2BAFBB29-72E5-4A7C-8B24-338A93FECBEF}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xdzj5a1n703wv175zqus0he7j5h].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xdzj5a1n703wv175zqus0he7j5h].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{741F98F5-DCB4-4F12-854E-3289D2B43626}' />
    </window>
    <window class='worksheet' name='As numbers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xdzj5a1n703wv175zqus0he7j5h].[Date (group)]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.0xdzj5a1n703wv175zqus0he7j5h].[Date (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xdzj5a1n703wv175zqus0he7j5h].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C761EF64-34F4-46B8-AB01-EC85B525064A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='As numbers' width='192'>
      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
      qhJeT34XKB7khYfvZE94LT/6xdXUuRLjSWP+KhqMd/LPnbs5vvbDZEnjPPu3f6LNLqWqLOeI
      c0Bw6DXuvO9V1n72e1z94fVY9Mdi15+BwWDAaDQyPT2txsbRaJRYLDYv/lc6pLL7ADMzwtTU
      lLprlJeXpzqVAqVjJjPyKrOuwpc3Go24XC614JxSyDtZ+8q2ajgcJj8//982+sPMmmpumhJF
      TH80o//U1BT9/f3U19cvKsqRJIm+vj5cLte8xGXJK8Ii4+x9vYmgDv5003+j9k9jFts+9DHe
      X1/GKWc38D9/vpMfju4hTfSy7+1WNl5yM7U5ekJDr3Lr757EB7jbBnAH/Pz6JxNk5ZfwoY99
      Guf+F2majMCuv/Lf+x9T75tVsomPffocio5uffiOQK/Xk5WVRW9vrzqldnV1kZaWhs1mQ5Ik
      hoeHCYfDVFdXU1ZWlrDlpwizlURZo6OjjIyMUFFRgcPhIBQK0dXVpab2OBLGx8eZmpqisLAQ
      q9WqlhHSarVYrVY8Hs9h7Q8MDCCKotpGURSPWp12JPh8PgYGBigvLyctLY1gMEhHRweZmZlJ
      zXTxeJzW1laKiorIyMjA4/GQnp5+2BQyPp8Pv9+vqsBmI/kZQJ4EfQlOaZqerlmrc7OfldMR
      0FvY9smv8f2MmdSIg5p03n/5DVzx0dXYteCPTtHb0YEHQOsi3wmjfR1MRTVMR0REf5SSvHSm
      x3qZnrXz5deUEpkvBX1HoWhslTKiSvyo1WopLi6mqqpKrcb42muvIcsyeXl5VFVVodVq1dw/
      cw9gFCgdc7YoXKvV0tzcTCgUwmQyqWlCkkF6ejrT09O89dZbxONxVYC/evVqdDrdEe0r2dgU
      KFUbFyo05/P5ePvttxEEAUmSkCQJt9uNyWRiw4YNR1y0Z2ZmIssybW1tBINBDAZDQkqUI9nX
      6/VqIWyYGd0HBgYYGRlR76HRaCgpKaGyshKAiYkJCgsLFwzlUoqwFJY1jt1AO4UU3gWkHCCF
      ZY2UA6SwrJFygBSWNVIOkMKyRsoBUljWSDlACssaSyLDyUKY4fb9vN7URSAmY80o5n2nbCPn
      IB8IMcJwx35e3ddBGCvF9cexbVVhoiJMDNH55i66I1ls2byB9INnE2Jsms7G/bT2DDAdFjHY
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
